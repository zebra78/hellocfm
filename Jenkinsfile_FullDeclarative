pipeline {

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '3')
  }
  
  parameters {
    string defaultValue: 'r19.5.1', description: 'r19.5.1', name: 'version', trim: false
    string defaultValue: 'tst', description: 'env', name: 'env', trim: false
  }

  agent any

  stages {
    stage('Clone repos') {
      steps {
        checkout changelog: false, poll: false, 
          scm: [$class: 'GitSCM', branches: [[name: '*/${version}']], 
          doGenerateSubmoduleConfigurations: false, 
          extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'app']],  
          submoduleCfg: [], userRemoteConfigs: 
          [[url: 'ssh://vagrant@192.168.100.100/~/gitserver/helloapp.git']]]

        checkout changelog: false, poll: false, 
          scm: [$class: 'GitSCM', branches: [[name: '*/${env}']], 
          doGenerateSubmoduleConfigurations: false, 
          extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'env']],  
          submoduleCfg: [], userRemoteConfigs: 
          [[url: 'ssh://vagrant@192.168.100.100/~/gitserver/helloenv.git']]]
      }
    }

    stage('Run playbook') {
      steps {
        ansiblePlaybook disableHostKeyChecking: true, extras: '-e "version=${version}"', inventory: 'hosts', playbook: 'webdeployer.yml'
      }
    }
  }
}
