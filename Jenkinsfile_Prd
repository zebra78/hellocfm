pipeline {

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '3')
  }
  
  parameters {
    string defaultValue: 'r19.5.1', description: 'r19.5.1', name: 'version', trim: false
    string defaultValue: 'tst', description: 'env', name: 'env', trim: false
  }

  agent any

  stage('Run playbook') {
    steps {
      ansiblePlaybook disableHostKeyChecking: true, extras: '-e "version=${version}"', inventory: 'hosts', playbook: 'webdeployer.yml'
    }
  }

  stage('Load settings') {
    steps {
      script {
        wrap([$class: 'BuildUser']) {
            env.BUILD_USER_ID = sh(returnStdout: true, script: "echo ${BUILD_USER_ID}").trim()
            env.version = sh(returnStdout: true, script: "echo ${version}").trim()
        }
      }
    }
  }

  stage('Approval') {
      when {
          //expression { BRANCH_NAME ==~ /(production|staging)/ }
          beforeInput true
          anyOf {
              environment name: 'BUILD_USER_ID', value: 'mmukthav'
              environment name: 'BUILD_USER_ID', value: 'mm009780'
          }
      }
      input {
          message "Should we continue?"
          ok "Yes, we should."
      }
      steps {
        echo "Hello, ${BUILD_USER_ID}, nice to meet you."
        build job: 'welcome_prd', parameters: [string(name: 'version', value: String.valueOf(version)), string(name: 'env', value: 'prd')], propagate: false
      }
  }
}
